---
- hosts: all
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
  - name: Install various base packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - build-essential
      - "linux-headers-{{ ansible_kernel }}"

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install Docker and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add user vagrant to docker group
    user:
      name: vagrant
      group: docker

  - name: Set Docker cgroup-driver to systemd
    copy:
      content: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"]
        }
      dest: /etc/docker/daemon.json

  - name: Restart Docker daemon
    command: systemctl restart docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Reset kubeadm (if retry)
    command: "{{ item }}"
    with_items:
      - kubeadm reset --force
      - rm -rf /home/vagrant/.kube

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  - name: Autocomplete Kubernetes
    shell: echo 'source <(kubectl completion bash)' >> /home/vagrant/.bashrc

  - name: Fetch gtp5g module from GitHub
    git:
      repo: https://github.com/free5gc/gtp5g.git
      dest: /home/vagrant/gtp5g

  - name: Make and install gtp5g module
    shell: "{{ item }}"
    with_items:
      - make clean
      - make
      - make install
    args:
     chdir: /home/vagrant/gtp5g

  handlers:
    - name: docker status
      service: name=docker state=started
